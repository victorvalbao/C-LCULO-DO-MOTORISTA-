<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <title>Calculadora de Valor por KM</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 30px;
    }
    label {
      display: block;
      margin-top: 10px;
    }
    input {
      padding: 5px;
      width: 200px;
    }
    .resultado {
      margin-top: 20px;
      font-weight: bold;
    }
  </style>
</head>
<body>

  <h2>Calculadora de Valor por KM</h2>

  <label>Valor do combustível (R$):</label>
  <input type="number" id="valorCombustivel" step="0.01">

  <label>KM por litro:</label>
  <input type="number" id="kmPorLitro" step="0.1">

  <label>KM rodado:</label>
  <input type="number" id="kmRodado">

  <label>Gasto com combustível (pode editar):</label>
  <input type="number" id="gastoCombustivel" step="0.01">

  <div class="resultado">
    Valor por KM: R$ <span id="valorKm">0.00</span>
  </div>

  <script>
    const valorCombustivel = document.getElementById("valorCombustivel");
    const kmPorLitro = document.getElementById("kmPorLitro");
    const kmRodado = document.getElementById("kmRodado");
    const gastoCombustivel = document.getElementById("gastoCombustivel");
    const valorKm = document.getElementById("valorKm");

    function atualizarResultados() {
      const vComb = parseFloat(valorCombustivel.value);
      const kmLitro = parseFloat(kmPorLitro.value);
      const km = parseFloat(kmRodado.value);
      let gasto = parseFloat(gastoCombustivel.value);

      if (!isNaN(vComb) && !isNaN(kmLitro) && !isNaN(km)) {
        const gastoCalculado = (km / kmLitro) * vComb;
        if (!gastoCombustivel.dataset.manual) {
          gasto = gastoCalculado;
          gastoCombustivel.value = gasto.toFixed(2);
        }
      }

      if (!isNaN(gasto) && !isNaN(km) && km > 0) {
        const valorPorKm = gasto / km;
        valorKm.textContent = valorPorKm.toFixed(2);
      }
    }

    // Eventos
    valorCombustivel.addEventListener("input", () => {
      gastoCombustivel.dataset.manual = "";
      atualizarResultados();
    });

    kmPorLitro.addEventListener("input", () => {
      gastoCombustivel.dataset.manual = "";
      atualizarResultados();
    });

    kmRodado.addEventListener("input", () => {
      gastoCombustivel.dataset.manual = "";
      atualizarResultados();
    });

    gastoCombustivel.addEventListener("input", () => {
      gastoCombustivel.dataset.manual = "true";
      atualizarResultados();
    });
  </script>

</body>
</html>
